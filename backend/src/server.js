const express = require('express');
const http = require('http');
const cors = require('cors');
const dotenv = require('dotenv');

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

const app = express();
const server = http.createServer(app);

// Middleware
app.use(cors({
  origin: process.env.FRONTEND_URL || ["http://localhost:5173", "http://localhost:5174"],
  credentials: true
}));
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// –°–æ–∑–¥–∞–µ–º –æ–±—â–µ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∏–≥—Ä
const games = new Map();
const players = new Map();

// –°–æ–∑–¥–∞–µ–º GameService —Å –æ–±—â–∏–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º
const GameService = require('./services/GameService');
const gameService = new GameService();
gameService.setGamesStorage(games);
gameService.setPlayersStorage(players);

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WebSocket —Å–µ—Ä–≤–∏—Å–∞
const WebSocketService = require('./services/WebSocketService');
const webSocketService = new WebSocketService(server);
webSocketService.setGameService(gameService);

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π
global.webSocketService = webSocketService;
global.gameService = gameService;
global.games = games;
global.players = players;

console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
console.log('üìã –†–∞–∑–º–µ—Ä –≤–Ω–µ—à–Ω–µ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –∏–≥—Ä:', games.size);
console.log('üîç –í–Ω–µ—à–Ω–µ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∏–≥—Ä –¥–æ—Å—Ç—É–ø–Ω–æ:', !!games);

// –ü–æ–¥–∫–ª—é—á–∞–µ–º –º–∞—Ä—à—Ä—É—Ç—ã
const authRoutes = require('./routes/auth');
const gameRoutes = require('./routes/games');

app.use('/api/auth', authRoutes);
app.use('/api/games', gameRoutes);

// –ë–∞–∑–æ–≤—ã–π route
app.get('/', (req, res) => {
  res.json({ message: 'DnD Backend API —Ä–∞–±–æ—Ç–∞–µ—Ç!' });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
app.use((err, req, res, next) => {
  console.error(err.stack);
  res.status(500).json({ error: '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!' });
});

const PORT = process.env.PORT || 3000;

const startServer = async () => {
  try {
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    server.listen(PORT, () => {
      console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
      console.log(`WebSocket —Å–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤ –∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è–º`);
      console.log(`API –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:${PORT}`);
    });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error);
    process.exit(1);
  }
};

startServer(); 